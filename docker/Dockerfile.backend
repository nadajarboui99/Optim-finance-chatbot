# Backend Dockerfile (Optimized for memory)
FROM python:3.11-slim

# Install minimal system dependencies and clean up
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Set environment variables for optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Copy and install requirements first (for better caching)
COPY Implementation/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt && \
    rm -rf /tmp/* /var/tmp/* ~/.cache/pip/*

# Copy application code
COPY Implementation/ ./

# Create necessary directories
RUN mkdir -p data/chromadb data/uploads

# Create optimized startup script
RUN echo '#!/bin/bash\n\
set -e\n\
echo "ðŸš€ Starting OPTIM Finance Chatbot..."\n\
\n\
# Get port from environment (Render provides this)\n\
PORT=${PORT:-8000}\n\
\n\
# Start FastAPI with proper port binding\n\
exec python -c "\n\
import uvicorn\n\
import os\n\
from api.app import app\n\
\n\
port = int(os.environ.get(\"PORT\", 8000))\n\
uvicorn.run(app, host=\"0.0.0.0\", port=port)\n\
"' > /app/start.sh && chmod +x /app/start.sh

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT:-8000}/health || exit 1

CMD ["/app/start.sh"]