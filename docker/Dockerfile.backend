# Backend Dockerfile (Python + ChromaDB only)
FROM python:3.11-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Setup Python environment
RUN python3 -m venv venv
ENV PATH="/app/venv/bin:$PATH"

COPY Implementation/ ./python/
# Install from the copied location  
RUN pip install --no-cache-dir -r ./python/requirements.txt


# Copy Python application
COPY Implementation/ ./python/

# Create necessary directories
RUN mkdir -p /app/python/data/chromadb /app/python/data/uploads

# Set environment variables
ENV PYTHONPATH=/app/python
ENV PYTHONUNBUFFERED=1

# Expose ports (only Python services)
EXPOSE 8000 8001

# Startup script - Only Python services
RUN echo '#!/bin/bash\n\
set -e\n\
\n\
echo "🚀 Starting OPTIM Finance Chatbot (FastAPI only)..."\n\
\n\
# Start Python FastAPI (main chatbot service)\n\
cd /app/python\n\
python api/app.py &\n\
PYTHON_PID=$!\n\
echo "✅ FastAPI server started on port 8000"\n\
\n\
# Conditionally start Admin API (only if enabled)\n\
if [ "${DEPLOY_ADMIN:-false}" = "true" ]; then\n\
    cd /app/python/admin\n\
    python admin_api.py &\n\
    ADMIN_PID=$!\n\
    echo "✅ Admin interface started on port 8001"\n\
else\n\
    echo "⏭️  Admin interface disabled for this deployment"\n\
    ADMIN_PID=""\n\
fi\n\
\n\
# Function to handle shutdown\n\
cleanup() {\n\
    echo "Shutting down services..."\n\
    if [ ! -z "$PYTHON_PID" ]; then kill $PYTHON_PID 2>/dev/null || true; fi\n\
    if [ ! -z "$ADMIN_PID" ]; then kill $ADMIN_PID 2>/dev/null || true; fi\n\
    wait\n\
}\n\
\n\
# Set up signal handlers\n\
trap cleanup SIGTERM SIGINT\n\
\n\
# Wait for the main process (FastAPI)\n\
wait $PYTHON_PID' > /app/start.sh

RUN chmod +x /app/start.sh

# Health check (only FastAPI)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

CMD ["/app/start.sh"]